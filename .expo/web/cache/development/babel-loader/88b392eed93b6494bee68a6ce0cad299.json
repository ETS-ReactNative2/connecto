{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function UploadImage() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var addImage = function addImage() {\n    var image_to_add;\n    return _regeneratorRuntime.async(function addImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            image_to_add = _context.sent;\n\n            if (!image_to_add.cancelled) {\n              setImage(image_to_add.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: imageUploaderStyles.container,\n    children: [image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(View, {\n      style: imageUploaderStyles.uploadBtnContainer,\n      children: _jsxs(TouchableOpacity, {\n        onPress: addImage,\n        style: imageUploaderStyles.uploadBtn,\n        children: [_jsxs(Text, {\n          children: [image ? 'Edit' : 'Upload', \" Image\"]\n        }), _jsx(AntDesign, {\n          name: \"camera\",\n          size: 20,\n          color: \"black\"\n        })]\n      })\n    })]\n  });\n}\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    backgroundColor: '#efefef',\n    position: 'relative',\n    borderRadius: 999,\n    overflow: 'hidden'\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: 'absolute',\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'lightgrey',\n    width: '100%',\n    height: '25%'\n  },\n  uploadBtn: {\n    display: 'flex',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/James/Desktop/ConnectO/connecto/src/views/UploadImage.js"],"names":["React","useState","useEffect","AntDesign","ImagePicker","UploadImage","image","setImage","addImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","image_to_add","cancelled","uri","imageUploaderStyles","container","width","height","uploadBtnContainer","uploadBtn","StyleSheet","create","elevation","backgroundColor","position","borderRadius","overflow","opacity","right","bottom","display","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AACrC,kBAA0BJ,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,QAAQ,GAAE,SAAVA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYJ,WAAW,CAACK,uBAAZ,CAAoC;AACzDC,cAAAA,UAAU,EAAEN,WAAW,CAACO,gBAAZ,CAA6BC,MADgB;AAEzDC,cAAAA,aAAa,EAAE,IAF0C;AAGzDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH,CAHiD;AAIzDC,cAAAA,OAAO,EAAE;AAJgD,aAApC,CADZ;;AAAA;AACTC,YAAAA,YADS;;AAQb,gBAAG,CAACA,YAAY,CAACC,SAAjB,EAA2B;AACvBV,cAAAA,QAAQ,CAACS,YAAY,CAACE,GAAd,CAAR;AACH;;AAVY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAaA,SACD,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,mBAAmB,CAACC,SAAjC;AAAA,eAEmBd,KAAK,IAAI,KAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAAEY,QAAAA,GAAG,EAAEZ;AAAP,OAAf;AAA+B,MAAA,KAAK,EAAE;AAAEe,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB;AAAtC,MAF5B,EAKA,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,mBAAmB,CAACI,kBAAjC;AAAA,gBACA,MAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEf,QAA3B;AAAqC,QAAA,KAAK,EAAEW,mBAAmB,CAACK,SAAhE;AAAA,mBACA,MAAC,IAAD;AAAA,qBAAOlB,KAAK,GAAG,MAAH,GAAY,QAAxB;AAAA,UADA,EAEA,KAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAyB,UAAA,IAAI,EAAE,EAA/B;AAAmC,UAAA,KAAK,EAAC;AAAzC,UAFA;AAAA;AADA,MALA;AAAA,IADC;AAiBA;AAED,IAAMa,mBAAmB,GAACM,UAAU,CAACC,MAAX,CAAkB;AACzCN,EAAAA,SAAS,EAAC;AACNO,IAAAA,SAAS,EAAC,CADJ;AAENL,IAAAA,MAAM,EAAC,GAFD;AAGND,IAAAA,KAAK,EAAC,GAHA;AAINO,IAAAA,eAAe,EAAC,SAJV;AAKNC,IAAAA,QAAQ,EAAC,UALH;AAMNC,IAAAA,YAAY,EAAC,GANP;AAONC,IAAAA,QAAQ,EAAC;AAPH,GAD+B;AAUzCR,EAAAA,kBAAkB,EAAC;AACfS,IAAAA,OAAO,EAAC,GADO;AAEfH,IAAAA,QAAQ,EAAC,UAFM;AAGfI,IAAAA,KAAK,EAAC,CAHS;AAIfC,IAAAA,MAAM,EAAC,CAJQ;AAKfN,IAAAA,eAAe,EAAC,WALD;AAMfP,IAAAA,KAAK,EAAC,MANS;AAOfC,IAAAA,MAAM,EAAC;AAPQ,GAVsB;AAmBzCE,EAAAA,SAAS,EAAC;AACNW,IAAAA,OAAO,EAAC,MADF;AAENC,IAAAA,UAAU,EAAC,QAFL;AAGNC,IAAAA,cAAc,EAAC;AAHT;AAnB+B,CAAlB,CAA1B","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Image, View, Platform, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default function UploadImage() {\r\n const [image, setImage] = useState(null);\r\n const addImage= async ()=>{\r\n    let image_to_add = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [4,3],\r\n        quality: 1,\r\n    });\r\n    \r\n    if(!image_to_add.cancelled){\r\n        setImage(image_to_add.uri);\r\n    }\r\n };\r\n    \r\n return (\r\n<View style={imageUploaderStyles.container}>\r\n               {\r\n                   image  &&<Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n               }\r\n\r\n<View style={imageUploaderStyles.uploadBtnContainer}>\r\n<TouchableOpacity onPress={addImage} style={imageUploaderStyles.uploadBtn} >\r\n<Text>{image ? 'Edit' : 'Upload'} Image</Text>\r\n<AntDesign name=\"camera\" size={20} color=\"black\" />\r\n</TouchableOpacity>\r\n</View>\r\n\r\n\r\n</View>\r\n\r\n );\r\n}\r\n\r\nconst imageUploaderStyles=StyleSheet.create({\r\n   container:{\r\n       elevation:2,\r\n       height:200,\r\n       width:200,\r\n       backgroundColor:'#efefef',\r\n       position:'relative',\r\n       borderRadius:999,\r\n       overflow:'hidden',\r\n   },\r\n   uploadBtnContainer:{\r\n       opacity:0.7,\r\n       position:'absolute',\r\n       right:0,\r\n       bottom:0,\r\n       backgroundColor:'lightgrey',\r\n       width:'100%',\r\n       height:'25%',\r\n   },\r\n   uploadBtn:{\r\n       display:'flex',\r\n       alignItems:\"center\",\r\n       justifyContent:'center'\r\n   }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}